services:
  simulator:
    build: ./hub/
    container_name: hub_simulator
    environment:
      BROKER_HOST: mqtt
      BROKER_PORT: 1883
    volumes:
      - ./hub:/src
    command: sh -c './run_mqtt_publisher.sh'

  web:
    build: ./app/
    container_name: fastapi_app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      - db
      - influxdb
      - mqtt
    environment:
      SECRET_KEY: IGeiaaqT1ytVodb7uYxmp9v83g9AEw15
      DOCKER_INFLUXDB_INIT_ORG: plant
      DOCKER_INFLUXDB_INIT_BUCKET: data
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: QcK88ovWesAIJSOXjm67ghVYCpglPWME
      DATABASE_URL: postgresql://iiot:CpglPWME@db:5432/iiot
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: QcK88ovWesAIJSOXjm67ghVYCpglPWME
      INFLUXDB_ORG: plant
      INFLUXDB_BUCKET: data
      BROKER_HOST: mqtt
      BROKER_PORT: 1883

  db:
    image: postgres:14.1-alpine
    restart: on-failure
    container_name: pgdb
    environment:
      POSTGRES_USER: iiot
      POSTGRES_PASSWORD: CpglPWME
      POSTGRES_DB: iiot
    volumes:
      - "db:/var/lib/postgresql/data_iiot"
    ports:
      - "9898:5432"
    expose:
      - 9898

  influxdb:
    image: influxdb:2.0
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: iiot
      DOCKER_INFLUXDB_INIT_PASSWORD: CP55LaIjoYjnnDPMTcJWPpLKpCnzKUXE
      DOCKER_INFLUXDB_INIT_ORG: "${DOCKER_INFLUXDB_INIT_ORG}"
      DOCKER_INFLUXDB_INIT_BUCKET: "${DOCKER_INFLUXDB_INIT_BUCKET}"
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: "${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}"

  mqtt:
    image: eclipse-mosquitto:1.6
    container_name: mqtt_broker
    ports:
      - "1883:1883"
      - "9001:9001"

volumes:
  db:
    driver: local